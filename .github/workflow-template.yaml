name: {{ SERVICE_NAME }} service ci

on:
  push:
    branches: ["main"]
    paths:
      - "{{ SERVICE_NAME }}/**"
      - ".github/workflows/actions/action.yaml"
      - ".github/workflows/{{ SERVICE_NAME }}-ci.yaml"
      - "pom.xml"
  pull_request:
    branches: ["main"]
    paths:
      - "{{ SERVICE_NAME }}/**"
      - ".github/workflows/actions/action.yaml"
      - ".github/workflows/{{ SERVICE_NAME }}-ci.yaml"
      - "pom.xml"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: {{ YOUR_PASSWORD }}
          POSTGRES_DB: {{ YOUR_DATABASE }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      FROM_ORIGINAL_REPOSITORY: ${{ github.event.pull_request.head.repo.full_name == github.repository || github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # if {{SERVICE_NAME}} is identity-service
      - name: Create .env file
        run: |
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> identity-service/.env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> identity-service/.env

      - name: Build Maven Project
        run: mvn clean install -DskipTests -f {{ SERVICE_NAME }}

      - name: Run Maven Test
        run: mvn test -f {{ SERVICE_NAME }}

      - name: Analyze with sonar cloud
        if: ${{ env.FROM_ORIGINAL_REPOSITORY == 'true' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -f {{ SERVICE_NAME }}

      - name: Log in to the Container registry
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v6
        with:
          context: ./{{ SERVICE_NAME }}
          push: true
          tags: ghcr.io/blubin/{{ SERVICE_NAME }}:latest